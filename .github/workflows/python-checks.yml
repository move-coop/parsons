name: Python checks

on:
  push:
    branches:
      - main
      - major-release
  pull_request:
  schedule:
    - cron: 0 0 * * 1
  workflow_dispatch:

permissions: read-all

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
          - '3.13-dev'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        resolution:
          - highest
          - limited-dependencies

    permissions:
      contents: write

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          disable-sudo: true
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - uses: install-pinned/uv@e29cd923c49146a4fcc66eb0c8bea117e33ed9ce

      - if: matrix.resolution != 'limited-dependencies'
        continue-on-error: ${{ contains(matrix.python-version, '3.14') }}
        run: |
          uv pip install --system --resolution ${{ matrix.resolution }} -e .[all]
          uv pip install --system --resolution ${{ matrix.resolution }} -r requirements-dev.txt

      - if: matrix.resolution == 'limited-dependencies'
        continue-on-error: ${{ contains(matrix.python-version, '3.14') }}
        env:
            PARSONS_LIMITED_DEPENDENCIES: 'TRUE'
        run: |
          uv pip install --system -e .[all]
          uv pip install --system -r requirements-dev.txt

      - id: cache-pytest
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .pytest_cache
          key: pytest-${{ matrix.python-version }}-${{ matrix.os }}-${{ matrix.resolution }}-${{ hashFiles('pyproject.toml') }}

      - run: pytest
        continue-on-error: ${{ contains(matrix.python-version, '3.14') }}
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.os }}.${{ matrix.python-version }}.${{ matrix.resolution }}"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        if: ${{ !contains(matrix.python-version, '3.14') }}
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.resolution }}
          path: .coverage.${{ matrix.os }}.${{ matrix.python-version }}.${{ matrix.resolution }}
          include-hidden-files: true

  ruff-format:
    runs-on: ubuntu-latest

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: 3.13
          cache: pip

      - uses: install-pinned/uv@e29cd923c49146a4fcc66eb0c8bea117e33ed9ce

      - run: uv pip install --system -r requirements-dev.txt

      - id: cache-ruff
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .ruff_cache
          key: ruff-${{ hashFiles('pyproject.toml') }}

      - id: run-ruff
        run: ruff format --diff .

  ruff-check:
    runs-on: ubuntu-latest

    permissions:
      security-events: write

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: 3.13
          cache: pip

      - uses: install-pinned/uv@e29cd923c49146a4fcc66eb0c8bea117e33ed9ce

      - run: uv pip install --system -r requirements-dev.txt

      - id: cache-ruff
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .ruff_cache
          key: ruff-${{ hashFiles('pyproject.toml') }}

      - id: run-ruff-sarif
        run: |
          ruff check --output-format=sarif -o results.sarif .

      - uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f
        if: ( success() || failure() ) && contains('["success", "failure"]', steps.run-ruff-sarif.outcome)
        with:
          sarif_file: results.sarif

      - id: run-ruff
        if: failure() && contains('["failure"]', steps.run-ruff-sarif.outcome)
        run: |
          ruff check --output-format=github .

  bandit:
    runs-on: ubuntu-latest

    permissions:
      security-events: write

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: 3.13
          cache: pip

      - uses: install-pinned/uv@e29cd923c49146a4fcc66eb0c8bea117e33ed9ce

      - run: uv pip install --system -r requirements-dev.txt

      - id: run-bandit-sarif
        run: |
          bandit --confidence-level 'medium' --severity-level 'medium' --recursive 'parsons' --format 'sarif' --output 'results.sarif'

      - uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f
        if: ( success() || failure() ) && contains('["success", "failure"]', steps.run-bandit-sarif.outcome)
        with:
          sarif_file: results.sarif

      - id: run-bandit
        if: failure() && contains('["failure"]', steps.run-bandit-sarif.outcome)
        run: |
          bandit --confidence-level 'medium' --severity-level 'medium' --recursive 'parsons'

  coverage:
    runs-on: ubuntu-latest
    needs: pytest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            img.shields.io:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          pattern: coverage-*
          merge-multiple: true

      - id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@0544a9c648672334d94ec5dd1add7410b4470ddc
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

  pre-commit:
    runs-on: ubuntu-latest
    needs:
      - ruff-format
      - ruff-check
      - bandit

    permissions:
      contents: write

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            proxy.golang.org:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: 3.13
          cache: pip

      - uses: install-pinned/uv@e29cd923c49146a4fcc66eb0c8bea117e33ed9ce

      - run: uv pip install --system -r requirements-dev.txt

      - id: cache-pre-commit
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .pre-commit-cache
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('pyproject.toml') }}

      - run: |
          pre-commit install
          pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: .pre-commit-cache

  pip-install:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
          - '3.14-dev'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        limited-dependencies:
          - 'TRUE'
          - ''

    runs-on: ${{ matrix.os }}

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          disable-sudo: true
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - continue-on-error: ${{ contains(matrix.python-version, '3.14') }}
        env:
          PARSONS_LIMITED_DEPENDENCIES: ${{ matrix.limited-dependencies }}
        run: |
          pip install -r requirements-dev.txt
          pip install -e .[all]

